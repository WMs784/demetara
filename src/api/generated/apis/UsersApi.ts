/* tslint:disable */
/* eslint-disable */
/**
 * vitaminD backend api
 * バックエンドのAPIの仕様書です
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DeletePost401Response,
  RegisterPost401Response,
  RegisterPostRequest,
} from '../models';
import {
    DeletePost401ResponseFromJSON,
    DeletePost401ResponseToJSON,
    RegisterPost401ResponseFromJSON,
    RegisterPost401ResponseToJSON,
    RegisterPostRequestFromJSON,
    RegisterPostRequestToJSON,
} from '../models';

export interface DeletePostRequest {
    registerPostRequest: RegisterPostRequest;
}

export interface RegisterPostOperationRequest {
    registerPostRequest: RegisterPostRequest;
}

/**
 * 
 */
export class UsersApi extends runtime.BaseAPI {

    /**
     * ユーザ名とグループ名の削除
     */
    async deletePostRaw(requestParameters: DeletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.registerPostRequest === null || requestParameters.registerPostRequest === undefined) {
            throw new runtime.RequiredError('registerPostRequest','Required parameter requestParameters.registerPostRequest was null or undefined when calling deletePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/delete`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegisterPostRequestToJSON(requestParameters.registerPostRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * ユーザ名とグループ名の削除
     */
    async deletePost(requestParameters: DeletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePostRaw(requestParameters, initOverrides);
    }

    /**
     * ユーザ名とグループ名の登録
     */
    async registerPostRaw(requestParameters: RegisterPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.registerPostRequest === null || requestParameters.registerPostRequest === undefined) {
            throw new runtime.RequiredError('registerPostRequest','Required parameter requestParameters.registerPostRequest was null or undefined when calling registerPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegisterPostRequestToJSON(requestParameters.registerPostRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * ユーザ名とグループ名の登録
     */
    async registerPost(requestParameters: RegisterPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.registerPostRaw(requestParameters, initOverrides);
    }

}
